"""added the required database tables

Revision ID: 568d39b42b77
Revises: e433ce87179b
Create Date: 2025-08-06 07:46:41.082038

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '568d39b42b77'
down_revision: Union[str, Sequence[str], None] = 'e433ce87179b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('department', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.create_table('policy_histories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('days_allowed', sa.Integer(), nullable=False),
    sa.Column('policy_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_policy_histories_id'), 'policy_histories', ['id'], unique=False)
    op.create_table('time_off_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('policy_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['policy_id'], ['policies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_time_off_requests_id'), 'time_off_requests', ['id'], unique=False)
    op.drop_index(op.f('ix_comments_id'), table_name='comments')
    op.drop_table('comments')
    op.add_column('policies', sa.Column('days_allowed', sa.Integer(), nullable=False))
    op.add_column('policies', sa.Column('policy_type', sa.String(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('policies', 'policy_type')
    op.drop_column('policies', 'days_allowed')
    op.create_table('comments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('policy_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['policy_id'], ['policies.id'], name=op.f('comments_policy_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('comments_pkey'))
    )
    op.create_index(op.f('ix_comments_id'), 'comments', ['id'], unique=False)
    op.drop_index(op.f('ix_time_off_requests_id'), table_name='time_off_requests')
    op.drop_table('time_off_requests')
    op.drop_index(op.f('ix_policy_histories_id'), table_name='policy_histories')
    op.drop_table('policy_histories')
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.drop_table('employees')
    # ### end Alembic commands ###
